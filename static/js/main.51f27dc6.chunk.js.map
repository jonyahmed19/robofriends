{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SeacrhBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","this","props","id","name","mail","className","src","alt","React","Component","CardList","robots","map","i","email","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","setState","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCcCQ,E,4JAjBX,WACI,MAAyBC,KAAKC,MAAvBC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,KACjB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,gBACpD,gCACI,6BAAKJ,IACL,4BAAIC,c,GATLI,IAAMC,WCsBVC,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEQA,EAAOC,KAAK,SAACT,EAAMU,GACf,OACA,cAAC,EAAD,CAEIX,GAAIS,EAAOE,GAAGX,GACdC,KAAMQ,EAAOE,GAAGV,KAChBC,KAAMO,EAAOE,GAAGC,OAHXD,SCIdE,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKX,UAAU,MAAf,SACI,uBACAA,UAAU,oCACVY,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCGRI,EATA,SAACnB,GAEZ,OACA,qBAAKoB,MAAO,CAACC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAvE,SACMvB,EAAMwB,YCiBDC,E,kDApBX,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IACD0B,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,SAAmBC,EAAOC,GACtB9B,KAAK+B,SAAS,CAAEH,UAAU,M,oBAE9B,WACI,OAAG5B,KAAK2B,MAAMC,SAEN,6DAGD5B,KAAKC,MAAMwB,a,GAjBEjB,IAAMC,WCiDnBuB,G,wDA1CX,aAAc,IAAD,8BACX,gBAMFC,eAAiB,SAACC,GAEhB,EAAKH,SAAU,CAAEI,YAAaD,EAAME,OAAOC,SAP3C,EAAKV,MAAQ,CACXhB,OAAQ,GACRwB,YAAa,IAJJ,E,qDAYb,WAAoB,IAAD,OACjBG,MAAM,8CACL7C,MAAM,SAAA8C,GAAQ,OAAIA,EAASC,UAC3B/C,MAAM,SAAAgD,GAAK,OAAI,EAAKV,SAAS,CAACpB,OAAQ8B,S,oBAGzC,WAEE,MAAgCzC,KAAK2B,MAA7BhB,EAAR,EAAQA,OAAQwB,EAAhB,EAAgBA,YAEVO,EAAiB/B,EAAOgC,QAAQ,SAAAC,GACpC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASX,EAAYU,kBAEvD,OACE,sBAAKxC,UAAU,aAAf,UACE,mBAAG0C,KAAK,6CAAR,SACA,oBAAI1C,UAAU,KAAd,2BAEA,cAAC,EAAD,CAAWW,aAAchB,KAAKiC,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACG,cAAC,EAAD,CAAWtB,OAAQ+B,e,GAnClBlC,IAAMC,YCAxBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.51f27dc6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nclass Card extends React.Component {\r\n\r\n    render(){\r\n        const {id, name, mail} = this.props;\r\n        return (\r\n            <div className='tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'> \r\n                <img src={`https://robohash.org/${id}?200x200`} alt='Robo friend'/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{mail}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ( {robots} ) => {\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map( (name, i) => {\r\n                    return  (\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        mail={robots[i].email} \r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lighttest-blue'\r\n            type='search' \r\n            placeholder='Search Robots' \r\n            onChange= {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n    <div style={{overflowY: 'scroll', border: '4px solid #6aec6a', height: '700px'}}>\r\n        { props.children }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch( error, info ){\r\n        this.setState({ hasError: true });\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (\r\n                <h1>Ops, there has some issues.</h1>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SeacrhBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        robots: [],\r\n        searchField: ''\r\n      }\r\n    }\r\n    onSearchChange = (event) => {\r\n\r\n      this.setState( { searchField: event.target.value } );\r\n  \r\n    }\r\n    componentDidMount(){\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then( response => response.json() )\r\n      .then( users => this.setState({robots: users}) )\r\n    }\r\n\r\n    render () {\r\n      \r\n      const { robots, searchField } = this.state;\r\n\r\n      const filteredRobots = robots.filter( robot => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n      });\r\n      return (\r\n        <div className='content tc'>\r\n          <a href='https://jonyahmed19.github.io/robofriends/'>\r\n          <h1 className='tc'>Robofriends</h1>\r\n          </a>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n              <ErrorBoundary>\r\n                 <CardList  robots={filteredRobots} />\r\n              </ErrorBoundary>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}